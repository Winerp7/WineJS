extends _layout

include mixins/_nodeRow

block content
  div(class="text-gray-900 font-light text-5xl items-center text-center")
    | Dashboard
    p(class="mt-2 text-lg text-gray-600")
      |Â Scroll to see your sensor data displayed on graphs and an overview of <a href="/nodes" class="text-gray-900 hover:underline">your network devices</a>.
  div(id="sectionSplitter" class="w-full border-b mb-8 mt-8") 
  div(class="flex flex-col items-center mb-4 ")
    button(id="graphsBtn" class="focus\:outline-none flex px-2 py-1 text-sm border rounded-lg border-gray-400 mt-0 mr-1 z-10")
      | Select graphs
      <svg class="fill-current h-4 w-4 mt-1 ml-1 z-10" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/> </svg>
      
    // ******* Dropdown menu starts here *******
    div(class="hidden z-0 absolute text-gray-900 bg-gray-100 flex flex-col rounded-lg mt-10 text-sm p-2 w-auto shadow-lg" id="dropdownGraphs")
      form(action="/dashboard" method="POST")
        div(style="max-height: 12rem;" class="overflow-auto")
          for fil in filter
            div(class="hover:bg-indigo-100 rounded px-2 py-1")
              input(type="checkbox" name=`${fil}`)
              label(for=`${fil}` class="px-2")
                | #{fil}
        button(type="submit" class="focus:outline-none mt-2 border border-teal-300 hover:border-teal-300 bg-teal-300 hover:bg-gray-100 rounded px-2 py-1 block w-full")
          | Save
    // ******* Dropdown menu ends here *******

  // ******* Graph begins here *******
  div(class="justify-center flex flex-wrap")
    each graph in graphs
      div(class="pb-10 text-xs text-center")
        != graph
  // ******* Graph end here *******

  // ******* Device table begins here *******
  div(class="m-20")
  div(class="mx-auto max-w-5xl flex flex-col items-center ")
    span(class="text-lg text-center font-medium")
      | Your devices
    div( class="flex flex-col py-2 font-light text-sm")
      div(class="text-gray-500 bg-white flex flex-row py-4 px-4 rounded-xl ")
        div(class="ml-2 w-32")
          | Name
        div(class="ml-2 w-32")
          | ID
        div(class="ml-2 w-32")
          | Status
        div(class="ml-2 w-48")
          | Sensors
        div(class="ml-2 w-32")
          | Functionality
      div(style="max-height: 12rem;" class="overflow-auto no-scrollbar")
        each node in nodes
          +nodeRow(node)
  // ******* Device table ends here *******



  script. 
    window.addEventListener('DOMContentLoaded', () => {
      const graphsBtn = document.querySelector('#graphsBtn'); 
      const dropdownGraphs = document.querySelector('#dropdownGraphs'); 

      graphsBtn.addEventListener('click', () => {
        dropdownGraphs.classList.toggle('hidden');
      })

      // Check the checkboxes if the user already has them filtered
      const userFilter = "#{userFilter}"; // Makes a string of the user's filters, separated by commas
      const splitFilter = userFilter.split(','); // Splits the string into an array
      //TODO: The filters cannot contain commas when doing this. 
      const checkboxes = document.querySelectorAll('input[type=checkbox]'); // Gets all checkboxes

      //TODO: Should it check on something else than name?
      for (var index = 0; index < checkboxes.length; index++) {
        if (splitFilter.includes(checkboxes[index].name))
          checkboxes[index].checked = "true";
      }
    })

  